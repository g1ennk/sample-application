name: Backend CI/CD

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행
    paths:
      - 'backend/**'  # backend 폴더 안의 파일이 변경될 때만 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ GitHub Repository 코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2️⃣ OpenJDK 21 환경 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3️⃣ Gradle 실행 권한 추가 및 빌드 (테스트 제외)
      - name: Build with Gradle
        run: |
          cd backend
          chmod +x gradlew
          ./gradlew clean build -x test

      # 4️⃣ Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5️⃣ AWS ECR 로그인
      - name: Login to Amazon ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # 6️⃣ Docker 이미지 빌드 및 ECR 푸시
      - name: Build and Push Docker Image
        run: |
          cd backend
          IMAGE_TAG=$(git rev-parse --short HEAD)  # Git SHA 기반 버전 생성
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG \
            --push .

      # 7️⃣ 배포 ZIP 파일 생성
      - name: Create Deployment Package
        run: |
          mkdir -p deploy
          cp appspec.yaml deploy/
          cp -r scripts deploy/  # 스크립트 폴더 포함
          cp -r backend/build/libs/*.jar deploy/  # Spring Boot JAR 포함
          cd deploy
          zip -r ../deploy.zip .
          cd ..

      # 8️⃣ ZIP 파일을 S3에 업로드
      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://weekly-deploy-bucket/deploy.zip

      # 9️⃣ AWS CodeDeploy로 배포 실행
      - name: Deploy with AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name weekly-app \
            --deployment-group-name backend-deployment-group \
            --revision "revisionType=S3,s3Location={bucket=weekly-deploy-bucket,key=deploy.zip,bundleType=zip}" \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --region ${{ secrets.AWS_REGION }}
