name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Gradle
        run: |
          cd backend
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          cd backend
          # Git SHA 기반 버전 태그 생성
          IMAGE_TAG=$(git rev-parse --short HEAD)

          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest \
            --push .

      - name: Create Deployment Package
        run: |
          mkdir -p deploy
          cp appspec.yml deploy/
          cp -r scripts deploy/
          # JAR 파일은 Docker 기반 배포에 필요 없어 제외
          cd deploy
          zip -r ../deploy.zip .
          cd ..

      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://weekly-deploy-bucket/deploy.zip

      - name: Deploy with AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name weekly-app \
            --deployment-group-name weekly-group \
            --revision "revisionType=S3,s3Location={bucket=weekly-deploy-bucket,key=deploy.zip,bundleType=zip}" \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --region ${{ secrets.AWS_REGION }}
