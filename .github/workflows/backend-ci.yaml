name: Backend CI

on:
  push:
    branches:
      - main  # main 브랜치에 Push될 때 실행

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ GitHub 레포지토리 코드 가져오기
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2️⃣ JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Gradle 빌드 (JAR 생성)
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build
        working-directory: backend  # backend 디렉토리에서 실행

      # 4️⃣ Docker Buildx 설정 (멀티 아키텍처 지원)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5️⃣ AWS 환경 변수 설정 (export 방식)
      - name: Configure AWS Credentials
        run: |
          echo "🔑 Setting AWS credentials as environment variables..."
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}

      # 6️⃣ AWS ECR 로그인 (환경 변수 사용)
      - name: Login to Amazon ECR
        run: |
          echo "🚀 Logging into Amazon ECR..."
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      # 7️⃣ Docker 이미지 빌드 및 ECR 푸시
      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)  # Git SHA 기반 태그 생성

          echo "🐳 Building & pushing Docker image..."
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest \
            --push ./backend
